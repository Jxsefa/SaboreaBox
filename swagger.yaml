openapi: 3.0.0
info:
  title: API de SaboreaBox
  version: 1.0.0
  description: Documentación de la API de SaboreaBox
servers:
  - url: http://34.227.50.4:5000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /admin/sale:
    get:
      summary: Obtener total de ventas
      tags:
        - Admin
      description: Devuelve el total de ventas del mes actual.
      responses:
        '200':
          description: Total de ventas obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalVentas:
                    type: integer
                    example: 100000
                  status:
                    type: integer
                    example: 200
        '500':
          description: Error al obtener los datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error en el servidor
                  status:
                    type: integer
                    example: 500
  /admin/sold:
    get:
      summary: Obtener total de productos vendidos
      tags:
        - Admin
      description: Devuelve la cantidad total de productos vendidos en el mes
      responses:
        '200':
          description: Total de productos vendidos obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  productosVendidos:
                    type: integer
                    example: 150
                  status:
                    type: integer
                    example: 200
        '500':
          description: Error al obtener la cantidad de productos vendidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error en el servidor.
                  status:
                    type: integer
                    example: 500
  /admin/user-active:
    get:
      summary: Obtener total de usuarios activos
      tags:
        - Admin
      description: >-
        Devuelve el número total de usuarios que han realizado pedidos en el mes
        actual.
      responses:
        '200':
          description: Total de usuarios activos obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  usuariosActivos:
                    type: integer
                    example: 75
                  status:
                    type: integer
                    example: 200
        '500':
          description: Error al obtener la cantidad de usuarios activos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error en el servidor.
                  status:
                    type: integer
                    example: 500
  /register:
    post:
      summary: Registro de un nuevo usuario
      tags:
        - Autenticación
      requestBody:
        description: Información necesaria para registrar un nuevo usuario
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre de usuario
                  example: usuario123
                email:
                  type: string
                  description: Correo electrónico del usuario
                  example: usuario@example.com
                password:
                  type: string
                  description: Contraseña segura
                  example: passwordSeguro123
      responses:
        '200':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario registrado correctamente.
                  status:
                    type: integer
                    example: 200
        '400':
          description: Todos los campos son obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Todos los campos son obligatorios.
                  status:
                    type: integer
                    example: 400
        '409':
          description: El usuario o correo ya existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario o correo ya existe.
                  status:
                    type: integer
                    example: 409
        '500':
          description: Error en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error en el servidor.
                  status:
                    type: integer
                    example: 500
  /login:
    post:
      summary: Inicio de sesión de un usuario
      tags:
        - Autenticación
      requestBody:
        description: Credenciales de inicio de sesión
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: usuario@example.com
                password:
                  type: string
                  example: passwordSeguro123
      responses:
        '200':
          description: Inicio de sesión exitoso, devuelve un token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: login realizado correctamente.
                  status:
                    type: integer
                    example: 200
        '400':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Credenciales inválidas
                  status:
                    type: integer
                    example: 400
        '500':
          description: Error en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error en el servidor
                  status:
                    type: integer
                    example: 500
  /cart:
    get:
      summary: Muestra el contenido del carrito
      tags:
        - Carrito
      description: Despliega los productos que llenan el carrito gracias al ID del usuario.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Carrito obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  cart:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Tiramisu Box
                        price:
                          type: integer
                          example: 10000
                        quantity:
                          type: integer
                          example: 1
                        image_url:
                          type: string
                          example: /public/images/tiramisu1.jpg
        '500':
          description: Error al obtener los datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error en el servidor
                  status:
                    type: integer
                    example: 500
  /cart/save:
    post:
      summary: Agrega contenido al carrito
      tags:
        - Carrito
      description: Agrega el contenido al carrito verificando si está logueado el usuario.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  example: 1
                quantity:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Producto agregado al carrito exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Producto agregado al carrito.
        '401':
          description: Se debe loguear el usuario para agregar al carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Debes iniciar sesión para agregar productos al carrito.
                  status:
                    type: integer
                    example: 401
        '500':
          description: Error al agregar el producto al carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error al agregar producto al carrito.
                  status:
                    type: integer
                    example: 500
  /cart/remove:
    delete:
      summary: Remueve contenido del carrito
      tags:
        - Carrito
      description: >-
        Remueve el contenido del carrito verificando si el usuario está
        logueado.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Se elimina correctamente un producto del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Producto eliminado del carrito.
        '400':
          description: Solicitud incorrecta, ID de producto requerido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Se requiere ID del producto.
                  status:
                    type: integer
                    example: 400
        '401':
          description: Se debe loguear el usuario para remover contenido del carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Debes iniciar sesión para eliminar productos del carrito.
                  status:
                    type: integer
                    example: 401
        '404':
          description: Producto no encontrado en el carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: El producto no está en el carrito.
                  status:
                    type: integer
                    example: 404
        '500':
          description: Error al eliminar un producto del carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error en el servidor
                  status:
                    type: integer
                    example: 500
  /payment:
    post:
      summary: Genera un pago para el usuario
      tags:
        - Pagos
      security:
        - bearerAuth: []
      requestBody:
        description: >-
          El endpoint no requiere un cuerpo en la solicitud, solo el ID de
          usuario extraído del token
        required: false
      responses:
        '200':
          description: Pago realizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: pago realizado correctamente
                  status:
                    type: integer
                    example: 200
        '400':
          description: Carrito vacío
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Carrito vacío
                  status:
                    type: integer
                    example: 400
        '402':
          description: Saldo insuficiente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Saldo insuficiente
                  status:
                    type: integer
                    example: 402
        '500':
          description: Error en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error del servidor
                  status:
                    type: integer
                    example: 500
  /products:
    delete:
      summary: Elimina un producto estableciendo active=false
      tags:
        - Productos
      requestBody:
        description: ID del producto a eliminar
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  description: ID del producto a eliminar
                  example: 1
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Producto eliminado exitosamente.
        '500':
          description: Error al eliminar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar el producto.
    get:
      summary: Obtiene todos los productos activos
      tags:
        - Productos
      responses:
        '200':
          description: Lista de productos activos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Producto A
                    price:
                      type: number
                      example: 10000
                    stock:
                      type: integer
                      example: 50
                    category:
                      type: string
                      example: Categoría A
                    description:
                      type: string
                      example: Descripción del producto A
                    content:
                      type: string
                      example: Contenido del producto A
                    image_url:
                      type: string
                      example: /public/images/productoA.jpg
    post:
      summary: Activa un producto estableciendo active=true
      tags:
        - Productos
      requestBody:
        description: ID del producto a activar
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  description: ID del producto a activar
                  example: 1
      responses:
        '200':
          description: Producto activado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Producto activado exitosamente.
        '500':
          description: Error al activar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al activar el producto.
  /products/{id}:
    get:
      summary: Obtiene un producto específico por ID
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del producto a obtener
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Producto A
                  price:
                    type: number
                    example: 10000
                  stock:
                    type: integer
                    example: 50
                  category:
                    type: string
                    example: Categoría A
                  description:
                    type: string
                    example: Descripción del producto A
                  content:
                    type: string
                    example: Contenido del producto A
                  image_url:
                    type: string
                    example: /public/images/productoA.jpg
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: product not found
  /products/save:
    post:
      summary: Guarda o actualiza un producto
      tags:
        - Productos
      requestBody:
        description: >-
          Información del producto a guardar o actualizar, incluyendo una imagen
          opcional
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID del producto (para actualización, opcional)
                  example: 1
                name:
                  type: string
                  description: Nombre del producto
                  example: Producto A
                price:
                  type: number
                  description: Precio del producto
                  example: 10000
                stock:
                  type: integer
                  description: Stock disponible del producto
                  example: 50
                category:
                  type: string
                  description: Categoría del producto
                  example: Categoría A
                description:
                  type: string
                  description: Descripción del producto
                  example: Descripción del producto A
                content:
                  type: string
                  description: Contenido del producto
                  example: Contenido del producto A
                imagen:
                  type: string
                  format: binary
                  description: Imagen del producto
      responses:
        '200':
          description: Producto guardado o actualizado exitosamente
          content:
            text/plain:
              schema:
                type: string
                example: Producto guardado exitosamente
        '400':
          description: Error en los datos del producto o imagen faltante
          content:
            text/plain:
              schema:
                type: string
                example: Ingresa una imagen
        '500':
          description: Error en el servidor al guardar o actualizar el producto
          content:
            text/plain:
              schema:
                type: string
                example: 'Error en el servidor: <mensaje de error>'
  /user:
    get:
      summary: Obtener perfil del usuario
      tags:
        - Usuario
      description: Devuelve la información del perfil del usuario autenticado.
      responses:
        '200':
          description: Perfil del usuario obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: Perfil del Usuario
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      username:
                        type: string
                        example: Maphs
                      balance:
                        type: integer
                        example: 10000
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado
                  status:
                    type: integer
                    example: 404
        '500':
          description: Error al obtener los datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error en el servidor
                  status:
                    type: integer
                    example: 500
  /user/order:
    get:
      summary: Obtener órdenes del usuario
      tags:
        - Usuario
      description: Devuelve la lista de órdenes realizadas por el usuario autenticado.
      responses:
        '200':
          description: Órdenes del usuario obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: Órdenes del Usuario
                  order_detail:
                    type: array
                    items:
                      type: object
                      properties:
                        order_id:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 2
                        price:
                          type: integer
                          example: 10000
                        product_name:
                          type: string
                          example: Tiramisu Box
                        order_date:
                          type: string
                          format: date
                          example: 15/10/2024
                        total:
                          type: integer
                          example: 20000
        '500':
          description: Error al obtener las órdenes del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Error del servidor.
                  status:
                    type: integer
                    example: 500
tags: []
